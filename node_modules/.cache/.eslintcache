[{"D:\\backup-shakil\\shakil\\frontend-react\\src\\index.js":"1","D:\\backup-shakil\\shakil\\frontend-react\\src\\App.js":"2","D:\\backup-shakil\\shakil\\frontend-react\\src\\reportWebVitals.js":"3","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\AddCustomer.js":"4","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\Customer.js":"5","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\EditCustomer.js":"6","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\layouts\\Footer.js":"7","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\layouts\\Header.js":"8","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\Home.js":"9"},{"size":554,"mtime":1685938801503,"results":"10","hashOfConfig":"11"},{"size":804,"mtime":1685951422930,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1685938801506,"results":"13","hashOfConfig":"11"},{"size":6639,"mtime":1686125061244,"results":"14","hashOfConfig":"11"},{"size":7281,"mtime":1686119749520,"results":"15","hashOfConfig":"11"},{"size":7047,"mtime":1685951525152,"results":"16","hashOfConfig":"11"},{"size":541,"mtime":1685945909782,"results":"17","hashOfConfig":"11"},{"size":1345,"mtime":1685951399272,"results":"18","hashOfConfig":"11"},{"size":457,"mtime":1686113742986,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1w0dazh",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"D:\\backup-shakil\\shakil\\frontend-react\\src\\index.js",[],[],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\App.js",[],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\reportWebVitals.js",[],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\AddCustomer.js",["50"],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\Customer.js",["51","52","53"],[],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport swal from \"sweetalert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Customer() {\r\n    const navigate = useNavigate();\r\n    const [customer, setCustomer] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //get data with axios\r\n    const getCustomer = async () => {\r\n        axios.post(process.env.REACT_APP_API_URL + \"/api/customer\", {\r\n            headers: {\r\n                'type': 'Application/Json',\r\n                'self_url': process.env.REACT_APP_API_SELF_URL,\r\n                'client_url': process.env.REACT_APP_API_CLIENT_URL,\r\n                'secret_key': process.env.REACT_APP_SECRET_KEY,\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.data.status == 200) {\r\n                    const data = response.data.customer;\r\n                    setCustomer(data)\r\n                    setIsLoading(false);\r\n                } else if (response.data.status == 419) {\r\n                    const data = [];\r\n                    setCustomer(data)\r\n                    setIsLoading(true);\r\n                    console.log(response.data.message)\r\n                }\r\n            })\r\n            .catch(error => console.error(`Error: ${error}`));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomer();\r\n    }, []);\r\n\r\n\r\n    const deleteCustomer = async (e, id) => {\r\n        const thisClickDelete = e.currentTarget;\r\n        e.preventDefault();\r\n        swal({\r\n            buttons: {\r\n                cancel: true,\r\n                confirm: true,\r\n            },\r\n            title: \"Are you sure?\",\r\n            text: \"You want to delete?\",\r\n            icon: \"warning\",\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    axios.delete(process.env.REACT_APP_API_URL + '/api/customer-delete/' + id, {\r\n                        headers: {\r\n                            'type': 'Application/Json',\r\n                            'self_url': process.env.REACT_APP_API_SELF_URL,\r\n                            'client_url': process.env.REACT_APP_API_CLIENT_URL,\r\n                            'secret_key': process.env.REACT_APP_SECRET_KEY,\r\n                        }\r\n                    }).then(function (response) {\r\n                        // console.log(response.data.message);\r\n                        if (response.data.status === 200) {\r\n                            thisClickDelete.closest(\"tr\").remove();\r\n                            swal({\r\n                                title: \"Deleted!\",\r\n                                text: response.data.message,\r\n                                icon: \"success\",\r\n                                button: \"Ok!\",\r\n                            });\r\n\r\n                            // console.log(response)\r\n                            setTimeout(() => {\r\n                                navigate('/customer');\r\n                            }, 2000);\r\n\r\n                        } else if (response.data.status === 402) {\r\n                            swal({\r\n                                title: \"Something wrong here!\",\r\n                                text: response.data.message,\r\n                                icon: \"error\",\r\n                                button: \"Ok!\",\r\n                            });\r\n                        } else {\r\n                            swal({\r\n                                title: \"Something wrong here!\",\r\n                                text: response.data.message,\r\n                                icon: \"error\",\r\n                                button: \"Ok!\",\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    var customer_HTML_TABLE = '';\r\n    if (isLoading) {\r\n        customer_HTML_TABLE = <tr className=\"text-center\"><td colSpan=\"7\"><h2>Loading...</h2></td></tr>\r\n    }\r\n    else {\r\n        customer_HTML_TABLE =\r\n            customer.map((data, index) => (\r\n                <tr key={index}>\r\n                    <td>{index + 1} </td>\r\n                    <td>{data.first_name} {data.last_name}</td>\r\n                    <td>{data.username}</td>\r\n                    <td>{data.email}</td>\r\n                    <td>{data.phone_no}</td>\r\n                    <td>\r\n                        {\r\n                            data.photo == null ?\r\n                                <img src={process.env.REACT_APP_API_URL + `/public/img/no_image.png`} alt=\"\" height={50} width={90} />\r\n                                : <img src={process.env.REACT_APP_API_URL + `/public/uploads/user/${data.photo}`} alt=\"\" height={50} width={90} />\r\n\r\n                        }\r\n                    </td>\r\n                    <td>\r\n                        <Link to={`/customer/${data.id}/edit`} className=\"btn btn-primary btn-small margin-right-10\" title=\"Edit\">\r\n                            <i className=\"fa fa-edit\"></i>\r\n                        </Link>\r\n                        {/* <button onClick={() => deleteCustomer(data.id)} className=\"btn btn-danger btn-small\" title=\"Delete\">\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button> */}\r\n                        <button onClick={(e) => deleteCustomer(e, data.id)} className=\"btn btn-danger btn-small\" title=\"Delete\">\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container student-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"bold\">Customer Details\r\n                                <Link to=\"/add-customer\" className=\"btn btn-primary btn-sm float-end\">Add Customer</Link>\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr className=\"text-center\">\r\n                                        <th>Id</th>\r\n                                        <th>Name</th>\r\n                                        <th>Username</th>\r\n                                        <th>Email</th>\r\n                                        <th>Phone</th>\r\n                                        <th>Photo</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {customer_HTML_TABLE}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Customer;","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\EditCustomer.js",["54"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction EditCustomer() {\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const [inputs, setInputs] = useState([]);\r\n    const [photo, setPhoto] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({ ...values, [name]: value }));\r\n    }\r\n\r\n\r\n    const updateCustomer = async () => {\r\n        const formData = new FormData();\r\n        formData.append('_method', 'PUT');\r\n        formData.append('first_name', inputs.first_name);\r\n        formData.append('last_name', inputs.last_name);\r\n        formData.append('email', inputs.email);\r\n        formData.append('phone_no', inputs.phone_no);\r\n        formData.append('photo', photo);\r\n        formData.append('username', inputs.username);\r\n        formData.append('password', inputs.password);\r\n\r\n        const response = await axios.post(process.env.REACT_APP_API_URL + \"/api/customer-update/\" + id, formData, {\r\n            headers: { 'Content-Type': \"multipart/form-data\" },\r\n        });\r\n        if (response.data.status === 200) {\r\n            swal({\r\n                title: \"Updated!\",\r\n                text: response.data.message,\r\n                icon: \"success\",\r\n                button: \"Ok!\",\r\n            });\r\n\r\n            console.log(response)\r\n            setTimeout(() => {\r\n                navigate('/customer');\r\n            }, 2000);\r\n\r\n        } else if (response.data.status === 402) {\r\n            swal({\r\n                title: \"Something wrong here!\",\r\n                text: response.data.message,\r\n                icon: \"error\",\r\n                button: \"Ok!\",\r\n            });\r\n        } else {\r\n            swal({\r\n                title: \"Something wrong here!\",\r\n                text: response.data.message,\r\n                icon: \"error\",\r\n                button: \"Ok!\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateCustomer();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomer();\r\n    }, []);\r\n\r\n    function getCustomer() {\r\n        axios.get(process.env.REACT_APP_API_URL + '/api/customer-edit/' + id).then(function (response) {\r\n            console.log(response);\r\n            setInputs(response.data.customer);\r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container customer-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 div-center\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"bold\">Update Customer\r\n                                <Link to=\"/customer\" className=\"btn btn-primary btn-sm float-end\">Back</Link>\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        First Name:\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Last Name:\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"last_name\" value={inputs.last_name} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Email:\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"email\" value={inputs.email} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Photo:\r\n                                    </label>\r\n                                    <br></br>\r\n                                    {\r\n                                        inputs.photo == null ?\r\n                                            <img src={process.env.REACT_APP_API_URL + `/public/img/no_image.png`} alt=\"\" height={200} width={200} />\r\n                                            : <img src={process.env.REACT_APP_API_URL + `/public/uploads/user/${inputs.photo}`}\r\n                                                alt=\"\" height={200} width={200} />\r\n\r\n                                    }\r\n                                    <input type=\"file\" className=\"form-control\" onChange={(e) => setPhoto(e.target.files[0])} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Phone:\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"phone_no\" value={inputs.phone_no} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Username:\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"username\" value={inputs.username} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>\r\n                                        Password:\r\n                                    </label>\r\n                                    <input type=\"password\" name=\"password\" value={inputs.password} onChange={handleChange} className=\"form-control\" ></input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <button type=\"submit\" id=\"updateCustomerBtn\" className=\"btn btn-info\">Update</button>\r\n                                    <Link to=\"/customer\" className=\"btn btn-danger margin-left-10\">Cancel</Link>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditCustomer;","D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\layouts\\Footer.js",[],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\layouts\\Header.js",[],[],"D:\\backup-shakil\\shakil\\frontend-react\\src\\pages\\Home.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":25,"column":42,"nodeType":"61","messageId":"62","endLine":25,"endColumn":44},{"ruleId":"59","severity":1,"message":"60","line":29,"column":49,"nodeType":"61","messageId":"62","endLine":29,"endColumn":51},{"ruleId":"63","severity":1,"message":"64","line":72,"column":8,"nodeType":"65","endLine":72,"endColumn":10,"suggestions":"66"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.","ArrayExpression",["67"],{"desc":"68","fix":"69"},"Update the dependencies array to be: [getCustomer]",{"range":"70","text":"71"},[2281,2283],"[getCustomer]"]