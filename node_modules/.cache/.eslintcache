[{"F:\\xampp\\htdocs\\React\\frontend-react\\src\\index.js":"1","F:\\xampp\\htdocs\\React\\frontend-react\\src\\reportWebVitals.js":"2","F:\\xampp\\htdocs\\React\\frontend-react\\src\\App.js":"3","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\AddCustomer.js":"4","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\EditCustomer.js":"5","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Customer.js":"6","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Home.js":"7","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\layouts\\Footer.js":"8","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\layouts\\Header.js":"9","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\ProductPurchase.js":"10","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Inventory.js":"11","F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\ProductSale.js":"12"},{"size":536,"mtime":1685381667692,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1685374604160,"results":"15","hashOfConfig":"14"},{"size":923,"mtime":1686759698721,"results":"16","hashOfConfig":"14"},{"size":7203,"mtime":1686759976973,"results":"17","hashOfConfig":"14"},{"size":7049,"mtime":1686760020220,"results":"18","hashOfConfig":"14"},{"size":7284,"mtime":1686760011244,"results":"19","hashOfConfig":"14"},{"size":471,"mtime":1686760024753,"results":"20","hashOfConfig":"14"},{"size":541,"mtime":1686387387769,"results":"21","hashOfConfig":"14"},{"size":1485,"mtime":1686759321666,"results":"22","hashOfConfig":"14"},{"size":6264,"mtime":1686761110751,"results":"23","hashOfConfig":"14"},{"size":316,"mtime":1686759354093,"results":"24","hashOfConfig":"14"},{"size":6242,"mtime":1686761158429,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"es5pn9",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"F:\\xampp\\htdocs\\React\\frontend-react\\src\\index.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\reportWebVitals.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\App.js",["65"],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\AddCustomer.js",["66"],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\EditCustomer.js",["67"],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Customer.js",["68","69","70"],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Home.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\layouts\\Footer.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\layouts\\Header.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\ProductPurchase.js",["71","72","73"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDeleteLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ProductPurchase() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [inputs, setInputs] = useState([]);\r\n  const [photo, setPhoto] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({ ...values, [name]: value }));\r\n  }\r\n\r\n\r\n  const updateCustomer = async () => {\r\n    const formData = new FormData();\r\n    formData.append('_method', 'PUT');\r\n    formData.append('first_name', inputs.first_name);\r\n    formData.append('last_name', inputs.last_name);\r\n    formData.append('email', inputs.email);\r\n    formData.append('phone_no', inputs.phone_no);\r\n    formData.append('photo', photo);\r\n    formData.append('username', inputs.username);\r\n    formData.append('password', inputs.password);\r\n    // const response ='';\r\n    const response = await axios.post(process.env.REACT_APP_API_URL + \"/api/customer-update/\" + id, formData, {\r\n      headers: { 'Content-Type': \"multipart/form-data\" },\r\n    });\r\n    if (response.data.status === 200) {\r\n      swal({\r\n        title: \"Updated!\",\r\n        text: response.data.message,\r\n        icon: \"success\",\r\n        button: \"Ok!\",\r\n      });\r\n\r\n      console.log(response)\r\n      setTimeout(() => {\r\n        navigate('/customer');\r\n      }, 2000);\r\n\r\n    } else if (response.data.status === 402) {\r\n      swal({\r\n        title: \"Something wrong here!\",\r\n        text: response.data.message,\r\n        icon: \"error\",\r\n        button: \"Ok!\",\r\n      });\r\n    } else {\r\n      swal({\r\n        title: \"Something wrong here!\",\r\n        text: response.data.message,\r\n        icon: \"error\",\r\n        button: \"Ok!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCustomer();\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, []);\r\n\r\n  function getCustomer() {\r\n    // axios.get(process.env.REACT_APP_API_URL + '/api/customer-edit/' + id).then(function (response) {\r\n    //     console.log(response);\r\n    //     setInputs(response.data.customer);\r\n    // });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container customer-div mb-3\">\r\n        <h3 className=\"text-bold text-center  mb-3 margin-top-10\">Purchase Product</h3>\r\n\r\n        <label>\r\n          <span className=\"text-bold mb-3\">Date</span>\r\n          <input type=\"date\" name=\"date\" value={inputs.date} onChange={handleChange} className=\"form-control mb-3\" ></input>\r\n        </label>\r\n\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>Product Name<span className=\"text-danger\">*</span></th>\r\n              <th>Stock Qty</th>\r\n              <th>Qty<span className=\"text-danger\">*</span></th>\r\n              <th>U/M</th>\r\n              <th>Price<span className=\"text-danger\">*</span></th>\r\n              <th>Disc</th>\r\n              <th>Total</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <select className=\"form-control text-center\" name=\"selectedFruit\">\r\n                  <option value=\"apple\">Apple Khabo Khabo</option>\r\n                  <option value=\"banana\">Banana Khabo Khabo</option>\r\n                  <option value=\"orange\">Orange Khabo Khabo</option>\r\n                </select>\r\n                {/* <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input> */}\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <button type=\"submit\" id=\"updateCustomerBtn\" className=\"btn btn-danger\">\r\n                  <FontAwesomeIcon icon={faDeleteLeft} />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <button type=\"submit\" id=\"addProductBtn\" className=\"btn btn-info\">\r\n                  Add New Product\r\n                </button>\r\n              </td>\r\n              <td className=\"text-right text-bold\" colSpan={5}>Grand Total</td>\r\n              <td className=\"text-right\">\r\n                <input type=\"text\" name=\"grand_total\" value={'0.00'} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <div className=\"form-group mb-3\">\r\n          <button type=\"submit\" id=\"submitBtn\" className=\"btn btn-primary\">Submit</button>\r\n          <button type=\"submit\" id=\"submitAnotherBtn\" className=\"btn btn-success  margin-left-10\">Submit and Another</button>\r\n        </div>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductPurchase;",[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\Inventory.js",[],[],"F:\\xampp\\htdocs\\React\\frontend-react\\src\\pages\\ProductSale.js",["74","75","76"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDeleteLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ProductSale() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [inputs, setInputs] = useState([]);\r\n  const [photo, setPhoto] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({ ...values, [name]: value }));\r\n  }\r\n\r\n\r\n  const updateCustomer = async () => {\r\n    const formData = new FormData();\r\n    formData.append('_method', 'PUT');\r\n    formData.append('first_name', inputs.first_name);\r\n    formData.append('last_name', inputs.last_name);\r\n    formData.append('email', inputs.email);\r\n    formData.append('phone_no', inputs.phone_no);\r\n    formData.append('photo', photo);\r\n    formData.append('username', inputs.username);\r\n    formData.append('password', inputs.password);\r\n    // const response ='';\r\n    const response = await axios.post(process.env.REACT_APP_API_URL + \"/api/customer-update/\" + id, formData, {\r\n      headers: { 'Content-Type': \"multipart/form-data\" },\r\n    });\r\n    if (response.data.status === 200) {\r\n      swal({\r\n        title: \"Updated!\",\r\n        text: response.data.message,\r\n        icon: \"success\",\r\n        button: \"Ok!\",\r\n      });\r\n\r\n      console.log(response)\r\n      setTimeout(() => {\r\n        navigate('/customer');\r\n      }, 2000);\r\n\r\n    } else if (response.data.status === 402) {\r\n      swal({\r\n        title: \"Something wrong here!\",\r\n        text: response.data.message,\r\n        icon: \"error\",\r\n        button: \"Ok!\",\r\n      });\r\n    } else {\r\n      swal({\r\n        title: \"Something wrong here!\",\r\n        text: response.data.message,\r\n        icon: \"error\",\r\n        button: \"Ok!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCustomer();\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, []);\r\n\r\n  function getCustomer() {\r\n    // axios.get(process.env.REACT_APP_API_URL + '/api/customer-edit/' + id).then(function (response) {\r\n    //     console.log(response);\r\n    //     setInputs(response.data.customer);\r\n    // });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container customer-div\">\r\n        <h3 className=\"text-bold text-center  mb-3  margin-top-10\">Sale Product</h3>\r\n        <label>\r\n          <span className=\"text-bold mb-3\">Date</span>\r\n          <input type=\"date\" name=\"date\" value={inputs.date} onChange={handleChange} className=\"form-control mb-3\" ></input>\r\n        </label>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>Product Name<span className=\"text-danger\">*</span></th>\r\n              <th>Stock Qty</th>\r\n              <th>Qty<span className=\"text-danger\">*</span></th>\r\n              <th>U/M</th>\r\n              <th>Price<span className=\"text-danger\">*</span></th>\r\n              <th>Disc</th>\r\n              <th>Total</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n              <select className=\"form-control text-center\" name=\"selectedFruit\">\r\n                  <option value=\"apple\">Apple Khabo Khabo</option>\r\n                  <option value=\"banana\">Banana Khabo Khabo</option>\r\n                  <option value=\"orange\">Orange Khabo Khabo</option>\r\n                </select>\r\n                {/* <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input> */}\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td>\r\n                <button type=\"submit\" id=\"updateCustomerBtn\" className=\"btn btn-danger\">\r\n                  <FontAwesomeIcon icon={faDeleteLeft} />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <button type=\"submit\" id=\"addProductBtn\" className=\"btn btn-info\">\r\n                  Add New Product\r\n                </button>\r\n              </td>\r\n              <td className=\"text-right text-bold\" colSpan={5}>Grand Total</td>\r\n              <td className=\"text-right\">\r\n                <input type=\"text\" name=\"grand_total\" value={'0.00'} onChange={handleChange} className=\"form-control text-right\" ></input>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <div className=\"form-group mb-3\">\r\n          <button type=\"submit\" id=\"submitBtn\" className=\"btn btn-primary\">Submit</button>\r\n          <button type=\"submit\" id=\"submitAnotherBtn\" className=\"btn btn-success  margin-left-10\">Submit and Another</button>\r\n        </div>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductSale;",{"ruleId":"77","severity":1,"message":"78","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":72,"column":8,"nodeType":"84","endLine":72,"endColumn":10,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":25,"column":42,"nodeType":"88","messageId":"89","endLine":25,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":29,"column":49,"nodeType":"88","messageId":"89","endLine":29,"endColumn":51},{"ruleId":"77","severity":1,"message":"90","line":4,"column":34,"nodeType":"79","messageId":"80","endLine":4,"endColumn":38},{"ruleId":"77","severity":1,"message":"91","line":14,"column":17,"nodeType":"79","messageId":"80","endLine":14,"endColumn":25},{"ruleId":"77","severity":1,"message":"92","line":67,"column":9,"nodeType":"79","messageId":"80","endLine":67,"endColumn":21},{"ruleId":"77","severity":1,"message":"90","line":4,"column":34,"nodeType":"79","messageId":"80","endLine":4,"endColumn":38},{"ruleId":"77","severity":1,"message":"91","line":14,"column":17,"nodeType":"79","messageId":"80","endLine":14,"endColumn":25},{"ruleId":"77","severity":1,"message":"92","line":67,"column":9,"nodeType":"79","messageId":"80","endLine":67,"endColumn":21},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.","ArrayExpression",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'setPhoto' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",{"desc":"94","fix":"95"},"Update the dependencies array to be: [getCustomer]",{"range":"96","text":"97"},[2281,2283],"[getCustomer]"]